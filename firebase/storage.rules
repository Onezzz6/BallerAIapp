rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    // Profile pictures
    match /profile_pictures/{userId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId) && isValidImage();
    }
    
    // User's training media
    match /training_media/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) 
        && (request.resource.contentType.matches('image/.*') 
            || request.resource.contentType.matches('video/.*'))
        && request.resource.size < 50 * 1024 * 1024; // 50MB max
    }
    
    // Exercise library media (read-only)
    match /exercise_library/{fileName} {
      allow read: if isSignedIn();
      allow write: if false; // Admin only via backend
    }
    
    // Team media
    match /team_media/{teamId}/{fileName} {
      function isTeamMember() {
        return exists(/databases/$(database)/documents/teams/$(teamId)/members/$(request.auth.uid));
      }
      
      function isTeamCoach() {
        return get(/databases/$(database)/documents/teams/$(teamId)).data.coachId == request.auth.uid;
      }
      
      allow read: if isSignedIn() && (isTeamMember() || isTeamCoach());
      allow write: if isSignedIn() && isTeamCoach()
        && request.resource.size < 20 * 1024 * 1024; // 20MB max
    }
  }
} 